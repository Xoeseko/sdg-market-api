<?php
/**
 * Created by IntelliJ IDEA.
 * User: xoeseko
 * Date: 2/10/2019
 * Time: 1:23 PM
 */

namespace App\Tests\Command;

use App\Command\GitParseCommand;
use Github\Client;
use PHPUnit\Framework\TestCase;
use ReflectionClass;
//Mocking the entity manager (thing that connects to db) for test
use Doctrine\ORM\EntityManagerInterface;

class GitParseCommandTest extends TestCase
{

  private $client;
  private $cmd;
  private $ghClient;

  protected static function getMethod($name) {
    $class = new ReflectionClass('App\Command\GitParseCommand');
    $method = $class->getMethod($name);
    $method->setAccessible(true);
    return $method;
  }

  protected function setUp(): void
  {
    parent::setUp();
    $this->client = new \GuzzleHttp\Client(['base_uri' => "http://127.0.0.1:8000/api/v1/"]);
    $this->ghClient = new Client();
    $this->cmd = new GitParseCommand($this->createMock(EntityManagerInterface::class), $this->ghClient);
  }

  protected function tearDown(): void
  {
    parent::tearDown(); // TODO: Change the autogenerated stub
  }

  //This is the failing test with the parameters master for a repo that doesn't have a master branch
  public function testGithubClient()
  {
    $this->expectException(\RuntimeException::class);
    $commits = $this->ghClient->api('repo')->commits()->all("cgrok","selfbot.py", array('sha' => 'master', 'per_page' => 1000));
    $this->assertEmpty($commits);
  }

  public function testGithucClientWithoutMaster()
  {
    $parser = self::getMethod('parseGithubUrl');
    $response = $parser->invokeArgs($this->cmd, ['http://github.com/xoeseko/sdg.market']);
    $commits = $this->ghClient->api('repo')->commits()->all($response['username'], $response['project'], array('per_page' => 1000));

    $this->assertNotEmpty($commits);

    $commits = $this->ghClient->api('repo')->commits()->all("cgrok","selfbot.py", array('per_page' => 1000));
    $this->assertNotEmpty($commits);
  }

  public function testWithDotWazahhh()
  {
    $commits = $this->ghClient->api('repo')->commits()->all("wazaahhh","sdg.market", array('per_page' => 1000));
    $this->assertNotEmpty($commits);
  }

}
